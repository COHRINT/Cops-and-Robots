#<>TODO: Create a hierarchy of yaml config files

# YAML
main:
  logging_level: INFO #['NOTSET', 'DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL']
  numpy_print_precision: 2
  use_ROS: False  # True if any robot is in the real world
  ROS_node_name: Python_Node
  max_run_time: 20000  # in number of frames, -1 for infinite
  log_time: False  # display the current simulation frame and time
  headless_mode: False
  number_of_agents:
    cops: 1
    robbers: 1
    distractors: 0

data_management:
  animation:  # Saves an output animation in animated gif form
    save_animation: False
    folder: 'animations/'
    filename: 'GP-VOI'
  storage:
    save_data: False
    record_data:  # Data to be recorded and saved
      robot positions: all  # 'all', None, or individual robot names
      grid probability: 2D  #2D, 4D, or None
      questions: True
      answers: True
      VOI: True
      ordered_question_list: True
    folder: 'data/GP-VOI/'
    filename: 'datalog'
  playback:  # Plays one or more rosbag files
    play_rosbags: False
    rosbags:
        Test 4: 'test4.bag'
    folder: 'data/ACC\ 2016/rosbags/'

cops:
  Deckard:
    pose: [0, 0, 90]  # [x(meters), y(meters), theta(degrees)]
    robber_model: static  # ['static','clockwise','counterclockwise','random walk']
    pose_source: python  # ['python' or a ros topic string like '/deckard/odom']
    web_interface_topic: python # python or rostopic name
    mission_planner_cfg:
      target_order: ['Roy', 'Pris']
    goal_planner_cfg:
      type_: greedy  # ['stationary', 'simple', 'trajectory', 'greedy']
    path_planner_cfg:
      type_: 'a_star'  # ['direct', 'a_star'] 
    fusion_engine_cfg:
      probability_type: grid  # ['grid', 'particle', 'gaussian mixture']
    map_cfg:
      plot_robbers: True # True for all, False for none, or list of robbers to plot
      map_name: fleming
      combined_only: False
      publish_to_ROS: False
    camera_cfg:
      max_view_dist: 1.0
      min_view_dist: 0.0
    human_cfg:
      false_alarm_prob: 0.2
      web_interface_topic: python  # ['python' or a rostopic name ('human_sensor')]
    questioner_cfg:
      use_ROS: False
      auto_answer: True
      target_order: ['Pris', 'Roy']
      target_weights: [11, 10]
      repeat_annoyance: 0.8   # max penalty to a repeated question
      repeat_time_penalty: 300  # seconds during which a repeat question is penalized
      ask_every_n: 10 # nonpositive number to turn off
      sequence_length: 1  # number of questions for non-myopic VOI
      minimize_questions: False  # ask over a smaller set of questions
      use_GP_VOI: False
      GP_VOI_file: 'VOI-GPs_2000.obj'  # Keep empty to not use GPs

robbers:
  Roy:
    pose_source: python  # ['python' or a ros topic string like '/roy/odom']
    goal_planner_cfg:
      type_: simple  # ['stationary', 'simple', 'trajectory']
    path_planner_cfg:
      type_: 'a_star'  # ['direct', 'a_star'] 
  Pris:
    pose_source: python  # ['python' or a ros topic string like '/zhora/odom']
    goal_planner_cfg:
      type_: simple  # ['stationary', 'simple', 'trajectory']
    path_planner_cfg:
      type_: 'a_star'  # ['direct', 'a_star'] 

distractors:
  Zhora:
    pose_source: python  # ['python' or a ros topic string like '/pris/odom']
    goal_planner_cfg:
      type_: simple  # ['stationary', 'simple', 'trajectory']
    path_planner_cfg:
      type_: 'a_star'  # ['direct', 'a_star'] 

human_interface:
  measurement_types:
    velocity: False
    area: True
    object: True
